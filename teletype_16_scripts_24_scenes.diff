diff -Naur ../2021_01_29/module/edit_mode.c ./module/edit_mode.c
--- ../2021_01_29/module/edit_mode.c	2021-01-29 15:19:01.000000000 +0100
+++ ./module/edit_mode.c	2021-01-29 17:33:39.237184813 +0100
@@ -409,6 +409,38 @@
         }
         else if (script == INIT_SCRIPT)
             prefix = 'I';
+        else if (script == TT_SCRIPT_A) {
+            prefix = 'A';
+	    muted = true;
+	}
+	else if (script == TT_SCRIPT_B) {
+            prefix = 'B';
+	    muted = true;
+	}
+        else if (script == TT_SCRIPT_C) {
+            prefix = 'C';
+	    muted = true;
+	}	    
+        else if (script == TT_SCRIPT_D) {
+            prefix = 'D';
+	    muted = true;
+	}	    
+        else if (script == TT_SCRIPT_E) {
+            prefix = 'E';
+	    muted = true;
+	}	    
+        else if (script == TT_SCRIPT_F) {
+            prefix = 'F';
+	    muted = true;
+	}
+        else if (script == TT_SCRIPT_H) {
+            prefix = 'H';
+	    muted = true;
+	}
+        else if (script == TT_SCRIPT_J) {
+            prefix = 'J';
+	    muted = true;
+	}	    
         else if (script <= TT_SCRIPT_8)
             muted = ss_get_mute(&scene_state, script);
 
diff -Naur ../2021_01_29/module/flash.h ./module/flash.h
--- ../2021_01_29/module/flash.h	2021-01-29 15:19:01.000000000 +0100
+++ ./module/flash.h	2021-01-29 17:33:39.237184813 +0100
@@ -7,7 +7,7 @@
 #include "line_editor.h"
 #include "teletype.h"
 
-#define SCENE_SLOTS 32
+#define SCENE_SLOTS 24
 
 u8 is_flash_fresh(void);
 void flash_prepare(void);
diff -Naur ../2021_01_29/module/main.c ./module/main.c
--- ../2021_01_29/module/main.c	2021-01-29 15:19:01.000000000 +0100
+++ ./module/main.c	2021-01-29 17:34:10.329593412 +0100
@@ -407,9 +407,13 @@
     else if (mode == M_PRESET_R && !(grid_connected && grid_control_mode)) {
         uint8_t preset = adc[1] >> 6;
         uint8_t deadzone = preset & 1;
-        preset >>= 1;
-        if (!deadzone || abs(preset - get_preset()) > 1)
+	preset >>= 1;
+
+        if (!deadzone || abs(preset - get_preset()) > 1){
+	    // atte: stop selection at SCENE_SLOTS, was hardcoded to 32...
+	    preset = (preset < SCENE_SLOTS ? preset : (SCENE_SLOTS - 1));
             process_preset_r_preset(preset);
+	}
     }
     else {
         ss_set_param(&scene_state, adc[1] << 2);
diff -Naur ../2021_01_29/module/usb_disk_mode.c ./module/usb_disk_mode.c
--- ../2021_01_29/module/usb_disk_mode.c	2021-01-29 15:19:01.000000000 +0100
+++ ./module/usb_disk_mode.c	2021-01-29 17:33:39.241184866 +0100
@@ -121,7 +121,7 @@
             }
 
             char input[36];
-            for (int s = 0; s < 10; s++) {
+            for (int s = 0; s < 18; s++) {
                 file_putc('\n');
                 file_putc('\n');
                 file_putc('#');
@@ -129,6 +129,22 @@
                     file_putc('M');
                 else if (s == 9)
                     file_putc('I');
+                else if (s == 10)
+                    file_putc('A');
+                else if (s == 11)
+                    file_putc('B');
+                else if (s == 12)
+                    file_putc('C');
+                else if (s == 13)
+                    file_putc('D');
+                else if (s == 14)
+                    file_putc('E');
+                else if (s == 15)
+                    file_putc('F');
+                else if (s == 16)
+                    file_putc('H');
+                else if (s == 17)
+                    file_putc('J');
                 else
                     file_putc(s + 49);
 
@@ -261,11 +277,27 @@
                                     s = 8;
                                 else if (c == 'I')
                                     s = 9;
-                                else if (c == 'P')
+                                else if (c == 'A')
                                     s = 10;
+                                else if (c == 'B')
+                                    s = 11;
+                                else if (c == 'C')
+                                    s = 12;
+                                else if (c == 'D')
+                                    s = 13;
+                                else if (c == 'E')
+                                    s = 14;
+                                else if (c == 'F')
+                                    s = 15;
+                                else if (c == 'H')
+                                    s = 16;
+                                else if (c == 'J')
+                                    s = 17;
+				else if (c == 'P')
+                                    s = 18;
                                 else if (c == 'G') {
                                     grid_state = grid_num = grid_count = 0;
-                                    s = 11;
+                                    s = 19;
                                 }
                                 else {
                                     s = c - 49;
@@ -298,7 +330,7 @@
                             }
                         }
                         // SCRIPTS
-                        else if (s >= 0 && s <= 9) {
+                        else if (s >= 0 && s <= 17) {
                             if (c == '\n') {
                                 if (p && l < SCRIPT_MAX_COMMANDS) {
                                     tele_command_t temp;
@@ -342,7 +374,7 @@
                         }
                         // PATTERNS
                         // tele_patterns[]. l wrap start end v[64]
-                        else if (s == 10) {
+                        else if (s == 18) {
                             if (c == '\n' || c == '\t') {
                                 if (b < 4) {
                                     if (l > 3) {
@@ -375,7 +407,8 @@
 
                                 if (c == '\n') {
                                     if (p) l++;
-                                    if (l > 68) s = -1;
+				    // atte: 64 + 4?????
+                                    if (l > PATTERN_LENGTH + 4) s = -1;
                                     b = 0;
                                     p = 0;
                                 }
@@ -392,7 +425,7 @@
                             }
                         }
                         // GRID
-                        else if (s == 11) {
+                        else if (s == 19) {
                             grid_usb_read(&scene, c);
                         }
                     }
diff -Naur ../2021_01_29/src/ops/controlflow.c ./src/ops/controlflow.c
--- ../2021_01_29/src/ops/controlflow.c	2021-01-29 15:19:01.000000000 +0100
+++ ./src/ops/controlflow.c	2021-01-29 17:33:39.241184866 +0100
@@ -242,7 +242,7 @@
 static void op_SCRIPT_set(const void *NOTUSED(data), scene_state_t *ss,
                           exec_state_t *es, command_state_t *cs) {
     uint16_t a = cs_pop(cs) - 1;
-    if (a > INIT_SCRIPT || a < TT_SCRIPT_1) return;
+    if (a > TT_SCRIPT_J || a < TT_SCRIPT_1) return;
 
     es_push(es);
     // an overflow causes all future SCRIPT calls to fail
@@ -271,7 +271,7 @@
     }
     else {
         uint8_t s = a - 1;
-        if (s >= TT_SCRIPT_1 && s <= TT_SCRIPT_8) {
+        if (s >= TT_SCRIPT_1 && s <= TT_SCRIPT_J) {
             ss_set_script_pol(ss, s, pol);
         }
     }
diff -Naur ../2021_01_29/src/state.h ./src/state.h
--- ../2021_01_29/src/state.h	2021-01-29 15:19:01.000000000 +0100
+++ ./src/state.h	2021-01-29 17:33:39.241184866 +0100
@@ -22,7 +22,7 @@
 #define PATTERN_COUNT 4
 #define PATTERN_LENGTH 64
 #define SCRIPT_MAX_COMMANDS 6
-#define SCRIPT_COUNT 11
+#define SCRIPT_COUNT 19
 #define EXEC_DEPTH 8
 #define WHILE_DEPTH 10000
 #define RAND_STATES_COUNT 5
diff -Naur ../2021_01_29/src/turtle.h ./src/turtle.h
--- ../2021_01_29/src/turtle.h	2021-01-29 15:19:01.000000000 +0100
+++ ./src/turtle.h	2021-01-29 17:33:39.241184866 +0100
@@ -41,6 +41,14 @@
     TT_SCRIPT_8,
     METRO_SCRIPT,
     INIT_SCRIPT,
+    TT_SCRIPT_A,
+    TT_SCRIPT_B,
+    TT_SCRIPT_C,
+    TT_SCRIPT_D,
+    TT_SCRIPT_E,
+    TT_SCRIPT_F,
+    TT_SCRIPT_H,
+    TT_SCRIPT_J,
     TEMP_SCRIPT
 } script_number_t;
 
